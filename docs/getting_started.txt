
VoidRay Game Engine - Getting Started Guide
==========================================

Welcome to VoidRay, a lightweight 2D game engine built with Python and Pygame!

SYSTEM REQUIREMENTS
------------------
- Python 3.8 or higher
- Pygame 2.0+ (automatically installed)
- Cross-platform: Windows, macOS, Linux

INSTALLATION
-----------
VoidRay comes ready to use! Just make sure you have Python 3.8+ installed.
The engine will automatically install Pygame when you first run it.

YOUR FIRST GAME IN 5 MINUTES
-----------------------------
Let's create a simple game where you control a blue square with arrow keys:

```python
import voidray
from voidray import Scene, Sprite, Vector2, Keys
from voidray.graphics.renderer import Color

class Player(Sprite):
    def __init__(self):
        super().__init__("Player")
        self.create_colored_rect(40, 40, Color.BLUE)
        self.speed = 200
    
    def update(self, delta_time):
        super().update(delta_time)
        
        # Get input
        input_manager = voidray.get_engine().input_manager
        velocity = Vector2.zero()
        
        if input_manager.is_key_pressed(Keys.LEFT):
            velocity.x = -self.speed
        if input_manager.is_key_pressed(Keys.RIGHT):
            velocity.x = self.speed
        if input_manager.is_key_pressed(Keys.UP):
            velocity.y = -self.speed
        if input_manager.is_key_pressed(Keys.DOWN):
            velocity.y = self.speed
        
        # Move player
        self.transform.position += velocity * delta_time

class GameScene(Scene):
    def on_enter(self):
        super().on_enter()
        
        # Create player
        player = Player()
        player.transform.position = Vector2(400, 300)
        self.add_object(player)

def init_game():
    # Create and set our scene
    game_scene = GameScene()
    voidray.register_scene("game", game_scene)
    voidray.set_scene("game")

def main():
    # Configure the engine
    voidray.configure(
        width=800, 
        height=600, 
        title="My First Game", 
        fps=60
    )
    
    # Register our initialization function
    voidray.on_init(init_game)
    
    # Start the engine
    voidray.start()

if __name__ == "__main__":
    main()
```

That's it! You now have a working game with:
- A player that moves with arrow keys
- Smooth movement using delta time
- Proper game structure with scenes

CORE CONCEPTS
-------------

1. ENGINE SETUP
   - Use voidray.configure() to set up your game window
   - Use voidray.on_init() to register your setup function
   - Use voidray.start() to begin the game loop

2. SCENES
   - Scenes are like levels or screens in your game
   - Create classes that inherit from Scene
   - Override on_enter() to set up your scene
   - Register scenes with voidray.register_scene()
   - Switch scenes with voidray.set_scene()

3. GAME OBJECTS
   - Sprites are visual game objects that can move and interact
   - Create classes that inherit from Sprite
   - Use create_colored_rect() or create_colored_circle() for simple shapes
   - Override update() for custom behavior

4. INPUT HANDLING
   - Get the input manager: voidray.get_engine().input_manager
   - Check key presses: input_manager.is_key_pressed(Keys.LEFT)
   - Check single key press: input_manager.is_key_just_pressed(Keys.SPACE)

5. MOVEMENT & POSITIONING
   - Every game object has a transform.position (Vector2)
   - Use delta_time for smooth, frame-rate independent movement
   - Vector2.zero() creates a zero vector
   - Add vectors: position += velocity * delta_time

WHAT'S NEXT?
-----------
- Learn about the physics system (docs/physics_guide.txt)
- Add collision detection to your game
- Create enemies and power-ups
- Add sound effects and music
- Check out the examples folder for more complex games

The engine handles all the complex stuff - you just focus on making your game fun!
